// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Kuraudo.Symbiosis
{
    /// <summary>
    /// Manages team membership and invitations.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Symbiosis = Kuraudo.Symbiosis;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Symbiosis.TeamMember("example", new()
    ///     {
    ///         Email = "my-user@email.com",
    ///         Role = "MEMBER",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SymbiosisResourceType("symbiosis:index/teamMember:TeamMember")]
    public partial class TeamMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the user has accepted the invitation to the team.
        /// </summary>
        [Output("acceptedInvitation")]
        public Output<string> AcceptedInvitation { get; private set; } = null!;

        /// <summary>
        /// User email to invite. Adding an team member will send the user an invitation. Deleting a team member will either delete the invitation or the user depending on whether the user has accepted the invitation.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// User role. Valid values include [MEMBER, ADMIN].
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;


        /// <summary>
        /// Create a TeamMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamMember(string name, TeamMemberArgs args, CustomResourceOptions? options = null)
            : base("symbiosis:index/teamMember:TeamMember", name, args ?? new TeamMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamMember(string name, Input<string> id, TeamMemberState? state = null, CustomResourceOptions? options = null)
            : base("symbiosis:index/teamMember:TeamMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/kuraudo-io/pulumi-symbiosis/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamMember Get(string name, Input<string> id, TeamMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new TeamMember(name, id, state, options);
        }
    }

    public sealed class TeamMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User email to invite. Adding an team member will send the user an invitation. Deleting a team member will either delete the invitation or the user depending on whether the user has accepted the invitation.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// User role. Valid values include [MEMBER, ADMIN].
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        public TeamMemberArgs()
        {
        }
        public static new TeamMemberArgs Empty => new TeamMemberArgs();
    }

    public sealed class TeamMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the user has accepted the invitation to the team.
        /// </summary>
        [Input("acceptedInvitation")]
        public Input<string>? AcceptedInvitation { get; set; }

        /// <summary>
        /// User email to invite. Adding an team member will send the user an invitation. Deleting a team member will either delete the invitation or the user depending on whether the user has accepted the invitation.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// User role. Valid values include [MEMBER, ADMIN].
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        public TeamMemberState()
        {
        }
        public static new TeamMemberState Empty => new TeamMemberState();
    }
}
